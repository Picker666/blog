(window.webpackJsonp=window.webpackJsonp||[]).push([[223],{611:function(t,i,s){"use strict";s.r(i);var v=s(54),_=Object(v.a)({},(function(){var t=this,i=t.$createElement,s=t._self._c||i;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"git-reset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reset"}},[t._v("#")]),t._v(" git reset")]),t._v(" "),s("p",[s("code",[t._v("git reset")]),t._v(" 命令的作用是回退版本，可以回退到期望的某一次提交。")]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reset [--soft | --mixed | --hard] [HEAD]\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"一、工作区域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、工作区域"}},[t._v("#")]),t._v(" 一、工作区域")]),t._v(" "),s("ul",[s("li",[t._v("1、工作区（Working Directory）：写代码的目录，项目代码存放目录 -- git add 之前的目录")]),t._v(" "),s("li",[t._v("2、暂存区（index/stage）：工作区和代码仓库之前的缓存地带。用 git add 把文件代码添加进去。-- git add 之后的目录")]),t._v(" "),s("li",[t._v("3、仓库区：git commit 之后，代码提交到的地方，也就是本地仓库。")])]),t._v(" "),s("h2",{attrs:{id:"二、-mixed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、-mixed"}},[t._v("#")]),t._v(" 二、--mixed")]),t._v(" "),s("p",[s("code",[t._v("--mixed")]),t._v(" 为 "),s("code",[t._v("git reset")]),t._v(" 的默认值。")]),t._v(" "),s("p",[t._v("也就是 "),s("code",[t._v("git reset")]),t._v(" 等价于 "),s("code",[t._v("git reset --mixed")]),t._v("。")]),t._v(" "),s("p",[t._v("命令效果：")]),t._v(" "),s("ul",[s("li",[t._v("1、重置暂存区文件。\n"),s("ul",[s("li",[t._v("（1）、历史记录保持不变，也就是不会更改仓库区；")]),t._v(" "),s("li",[t._v("（2）、暂存区内容撤销，"),s("strong",[t._v("回到工作区")]),t._v("；")]),t._v(" "),s("li",[t._v("（3）、工作区"),s("strong",[t._v("原有")]),t._v("内容保持不变，就是工作有为 git add 的内容，也仍然保持不变，"),s("strong",[t._v("暂存区的内容会添加到工作区")]),t._v("；")])])]),t._v(" "),s("li",[t._v("2、原有文件内容的变更： 修改内容还在只是变成 "),s("code",[t._v("git add")]),t._v(" 之前的状态；")]),t._v(" "),s("li",[t._v("3、关于目录文件的变更：\n"),s("ul",[s("li",[t._v("（1）、新增文件：文件仍然存在，只是变成 "),s("code",[t._v("git add")]),t._v(" 之前的状态；")]),t._v(" "),s("li",[t._v("（2）、删除文件：目录仍然不存在，只是变成 "),s("code",[t._v("git add")]),t._v(" 之前的状态；")])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("`git add` 之前的状态")]),t._v(" "),s("p",[t._v("在执行 "),s("code",[t._v("git status")]),t._v(" 时候，红色的部分代表是："),s("code",[t._v("git add")]),t._v(" 之前的状态；绿色部分代表是："),s("code",[t._v("git add")]),t._v(" 之后 "),s("code",[t._v("git commit")]),t._v(" 之前 的状态。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/blog/images/git/gitreset1.png",alt:"git reset"}})]),t._v(" "),s("h2",{attrs:{id:"三、-soft-commitid"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、-soft-commitid"}},[t._v("#")]),t._v(" 三、--soft commitId")]),t._v(" "),s("p",[t._v("使用场景：")]),t._v(" "),s("p",[t._v("代码已经commit。")]),t._v(" "),s("p",[t._v("命令效果：")]),t._v(" "),s("ul",[s("li",[t._v("1、移动当前 HEAD 指针回到上一个 commit或者指定的commitID，从仓库删除 当前 commit，提交内容撤回到 暂存区；")]),t._v(" "),s("li",[t._v("2、暂存区和工作区 原本存在的内容不改变，另外撤销内容回到暂存区；")]),t._v(" "),s("li",[t._v("3、关于目录文件的变更：\n"),s("ul",[s("li",[t._v("（1）、新增文件：文件仍然存在，只是变成 "),s("code",[t._v("git add")]),t._v(" 之后的状态；")]),t._v(" "),s("li",[t._v("（2）、删除文件：目录仍然不存在，只是变成 "),s("code",[t._v("git add")]),t._v(" 之后的状态；")])])])]),t._v(" "),s("p",[s("img",{attrs:{src:"/blog/images/git/gitreset2.png",alt:"git reset --soft"}})]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("如果 commitId 不是上一个commit，那么会将 commitId之前的所有操作撤回到 暂存区。")])]),t._v(" "),s("h2",{attrs:{id:"四、-hard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四、-hard"}},[t._v("#")]),t._v(" 四、–-hard")]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reset --hard DEAD|commitId\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("参数撤销工作区和暂存区中所有未提交的修改内容。")]),t._v(" "),s("p",[t._v("命令效果：")]),t._v(" "),s("ul",[s("li",[t._v("1、将暂存区与工作区都回到上一次版本，并删除之前的所有信息提交，当前 HEAD 指针可能改变，工作区和暂存区内容清空；")]),t._v(" "),s("li",[t._v("2、原有文件内容的变更：修改内容丢失（修改的代码不会变成未add的状态）；")]),t._v(" "),s("li",[t._v("3、目录结构的变更（增加或者删除文件）：新增文件丢失、删除的文件相当于没删。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"/blog/images/git/gitreset3.png",alt:"git reset --soft"}}),t._v(" "),s("img",{attrs:{src:"/blog/images/git/gitreset4.png",alt:"git reset --soft"}})]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("如果 DEAD 或者 commitId 为上一条commit id，HEAD 指针不变；")]),t._v(" "),s("p",[t._v("如果 commitId 为更早的commit id，HEAD 指针指向对应的 commit。")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("版本回退注意")]),t._v(" "),s("p",[t._v("如果执行了 git reset --hard 较早的commitId，这时候要保证协作的同事都做了本地和远程的代码更新。")])])])}),[],!1,null,null,null);i.default=_.exports}}]);