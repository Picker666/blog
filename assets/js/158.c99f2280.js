(window.webpackJsonp=window.webpackJsonp||[]).push([[158],{546:function(t,e,r){"use strict";r.r(e);var n=r(54),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"建造者模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#建造者模式"}},[t._v("#")]),t._v(" 建造者模式")]),t._v(" "),r("p",[t._v("建造者模式（Builder Pattern）使用多个简单的对象一步一步构建成一个复杂的对象。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。")]),t._v(" "),r("p",[t._v("一个 Builder 类会一步一步构造最终的对象。该 Builder 类是独立于其他对象的。")]),t._v(" "),r("p",[t._v("...")])])}),[],!1,null,null,null);e.default=s.exports}}]);